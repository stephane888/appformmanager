{"version":3,"sources":["webpack://appForm/./src/App/input/SelectDisplay.vue?ba13","webpack://appForm/src/App/input/SelectDisplay.vue","webpack://appForm/./src/App/input/SelectDisplay.vue?0f0d","webpack://appForm/./src/App/input/SelectDisplay.vue","webpack://appForm/./node_modules/vee-validate/dist/rules.js","webpack://appForm/./src/App/EditsFields/vee-validate-custom.js","webpack://appForm/./src/App/config/validation.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","class","validationField","mode","attrs","_v","_s","field","label","require","name","scopedSlots","_u","key","fn","v","options","model","value","callback","$$v","$set","expression","_l","error","ii","_e","staticRenderFns","props","type","Object","required","components","ValidationProvider","data","mounted","watch","computed","status","states","length","undefined","setStatus","methods","component","alpha$1","en","cs","da","de","es","fa","fr","it","lt","nl","hu","pl","pt","ro","ru","sk","sr","sv","tr","uk","ar","az","el","ja","he","validate$r","_a","_b","locale","Array","isArray","every","val","test","keys","some","loc","params$k","alpha","validate","params","validate$j","multiple","re","String","split","map","emailStr","trim","params$c","default","email","isNullOrUndefined","isEmptyArray","arr","validate$5","testValue","strValue","numeric","validate$3","allowFalse","result","valid","computesRequired$1","params$3","computesRequired","extend","message","validationRessource","conditions","action","operator","state_name","listsOperators","text","Action","computedValidation","formDatas","currentField","formDatasValidate","i","fields","j","state","config","typeSelection","includes","x","y","localeCompare","parseInt","listesEtapes","form","etapes","forms","currentForm","info","push","title","getFormStateByName","getFieldByName","ValidationInstance","StepeValidationOptions","condition"],"mappings":"uLAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,YAAYC,OAAOP,EAAIQ,iBAAmBR,EAAIS,KAAO,OAAS,IAAI,CAACL,EAAG,MAAM,CAACE,YAAY,iBAAiBC,MAAMP,EAAIQ,gBAAkB,GAAK,QAAQ,CAAER,EAAmB,gBAAEI,EAAG,aAAa,CAACM,MAAM,CAAC,KAAO,SAAS,CAACN,EAAG,MAAM,CAACE,YAAY,6BAA6B,CAACF,EAAG,QAAQ,CAACM,MAAM,CAAC,UAAU,WAAW,CAACN,EAAG,QAAQ,CAACM,MAAM,CAAC,GAAK,MAAM,CAACN,EAAG,QAAQ,CAACE,YAAY,SAAS,CAACN,EAAIW,GAAG,IAAIX,EAAIY,GAAGZ,EAAIa,MAAMC,OAAO,SAASV,EAAG,QAAQ,CAACE,YAAY,cAAcI,MAAM,CAAC,GAAK,MAAM,CAACN,EAAG,qBAAqB,CAACM,MAAM,CAAC,MAAQV,EAAIa,MAAME,QAAQ,KAAOf,EAAIa,MAAMG,MAAMC,YAAYjB,EAAIkB,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,SAASC,GAAG,MAAO,CAACjB,EAAG,gBAAgB,CAACE,YAAY,kCAAkCI,MAAM,CAAC,KAAO,OAAO,YAAc,GAAG,QAAUV,EAAIa,MAAMS,QAAQ,KAAOtB,EAAIa,MAAMG,MAAMO,MAAM,CAACC,MAAOxB,EAAIa,MAAW,MAAEY,SAAS,SAAUC,GAAM1B,EAAI2B,KAAK3B,EAAIa,MAAO,QAASa,IAAME,WAAW,iBAAiBxB,EAAG,MAAM,CAACE,YAAY,eAAeN,EAAI6B,GAAIR,EAAQ,QAAE,SAASS,EAAMC,GAAI,OAAO3B,EAAG,QAAQ,CAACe,IAAIY,EAAGzB,YAAY,WAAW,CAACN,EAAIW,GAAG,IAAIX,EAAIY,GAAGkB,GAAO,UAAS,OAAO,MAAK,EAAM,eAAe,IAAI,IAAI,KAAK9B,EAAIgC,MAAM,MAC3rCC,EAAkB,G,gDC+CtB,G,UAAA,CACEjB,KAAM,YACNkB,MAAO,CACLrB,MAAO,CACLsB,KAAMC,OACNC,UAAU,IAGdC,WAAY,CACVC,mBAAJ,QAEEC,KAXF,WAYI,MAAO,IAITC,QAhBF,aAmBEC,MAAO,GAGPC,SAAU,OAAZ,OAAY,CAAZ,iCACA,+BACA,8CAFA,IAGInC,gBAHJ,WAIM,IAAIoC,GAAS,EACb,OAAI3C,KAAKY,MAAMgC,OAAOC,QACpBF,EAAS,EAAjB,wBACA,eACA,WACA,6BAEuBG,IAAXH,IAAsBA,GAAS,GACnC3C,KAAK+C,UAAUJ,GACRA,IAEP3C,KAAK+C,UAAUJ,GACRA,MAIbK,QAAS,CACPD,UADJ,SACA,GACM/C,KAAK0B,KAAK1B,KAAKY,MAAO,SAAU+B,OC5FgU,I,YCOlWM,EAAY,eACd,EACAnD,EACAkC,GACA,EACA,KACA,WACA,MAIa,aAAAiB,E,6CClBf;;;;;;AAUA,IAAIC,EAAU,CACVC,GAAI,YACJC,GAAI,2BACJC,GAAI,eACJC,GAAI,gBACJC,GAAI,mBACJC,GAAI,2DACJC,GAAI,4BACJC,GAAI,qBACJC,GAAI,qBACJC,GAAI,kBACJC,GAAI,qBACJC,GAAI,qBACJC,GAAI,yBACJC,GAAI,iBACJC,GAAI,aACJC,GAAI,4BACJC,GAAI,iBACJC,GAAI,eACJC,GAAI,mBACJC,GAAI,mBACJC,GAAI,qDACJC,GAAI,oBACJC,GAAI,YACJC,GAAI,6EACJC,GAAI,2BAoFJC,EAAa,SAAUrD,EAAOsD,GAC9B,IAAIC,QAAa,IAAPD,EAAgB,GAAKA,GAAIE,OAAQA,OAAgB,IAAPD,EAAgB,GAAKA,EACzE,OAAIE,MAAMC,QAAQ1D,GACPA,EAAM2D,OAAM,SAAUC,GAAO,OAAOP,EAAWO,EAAK,CAAEJ,OAAQA,OAGpEA,GAGG7B,EAAQ6B,IAAW7B,EAAQC,IAAIiC,KAAK7D,GAFjCY,OAAOkD,KAAKnC,GAASoC,MAAK,SAAUC,GAAO,OAAOrC,EAAQqC,GAAKH,KAAK7D,OAI/EiE,EAAW,CACX,CACIzE,KAAM,WAGV0E,EAAQ,CACRC,SAAUd,EACVe,OAAQH,GAqKRI,EAAa,SAAUrE,EAAOsD,GAC9B,IAAIgB,QAAmB,IAAPhB,EAAgB,GAAKA,GAAIgB,SAErCC,EAAK,0JAMT,OALID,IAAab,MAAMC,QAAQ1D,KAC3BA,EAAQwE,OAAOxE,GACVyE,MAAM,KACNC,KAAI,SAAUC,GAAY,OAAOA,EAASC,WAE/CnB,MAAMC,QAAQ1D,GACPA,EAAM2D,OAAM,SAAUC,GAAO,OAAOW,EAAGV,KAAKW,OAAOZ,OAEvDW,EAAGV,KAAKW,OAAOxE,KAEtB6E,EAAW,CACX,CACIrF,KAAM,WACNsF,SAAS,IAGbC,EAAQ,CACRZ,SAAUE,EACVD,OAAQS,GAGZ,SAASG,EAAkBhF,GACvB,OAAiB,OAAVA,QAA4BuB,IAAVvB,EAE7B,SAASiF,EAAaC,GAClB,OAAOzB,MAAMC,QAAQwB,IAAuB,IAAfA,EAAI5D,OA8BrC,IAkNI0B,EAAK,kBACLpB,EAAK,WACLuD,EAAa,SAAUnF,GACvB,IAAIoF,EAAY,SAAUxB,GACtB,IAAIyB,EAAWb,OAAOZ,GACtB,OAAOhC,EAAGiC,KAAKwB,IAAarC,EAAGa,KAAKwB,IAExC,OAAI5B,MAAMC,QAAQ1D,GACPA,EAAM2D,MAAMyB,GAEhBA,EAAUpF,IAEjBsF,EAAU,CACVnB,SAAUgB,GA0BVI,EAAa,SAAUvF,EAAOsD,GAC9B,IAAIkC,QAAqB,IAAPlC,EAAgB,CAAEkC,YAAY,GAASlC,GAAIkC,WACzDC,EAAS,CACTC,OAAO,EACP7E,UAAU,GAEd,OAAImE,EAAkBhF,IAAUiF,EAAajF,GAClCyF,GAGG,IAAVzF,GAAoBwF,GAGxBC,EAAOC,QAAUlB,OAAOxE,GAAO4E,OAAOtD,OAC/BmE,GAHIA,GAKXE,GAAqB,EACrBC,EAAW,CACX,CACIpG,KAAM,aACNsF,SAAS,IAGbjE,EAAW,CACXsD,SAAUoB,EACVnB,OAAQwB,EACRC,iBAAkBF,I,0ECznBtBG,eAAO,QAASf,QAEhBe,eAAO,WAAD,eAAC,kBACFjF,QADC,IAEJkF,QAAS,0BAEXD,eAAO,QAAS5B,QAChB4B,eAAO,QAASR,S,8KCTVU,EAAsB,CAC1BC,WAD0B,WAExB,MAAO,CACLC,OAAQ,GACR1G,KAAM,GACN2G,SAAU,GACVnG,MAAO,GACPoG,WAAY,KAGhBC,eAV0B,WAWxB,MAAO,CACL,CACEC,KAAM,SACNtG,MAAO,aAET,CACEsG,KAAM,WACNtG,MAAO,aAET,CACEsG,KAAM,QACNtG,MAAO,SAET,CACEsG,KAAM,iCACNtG,MAAO,QAET,CACEsG,KAAM,sCACNtG,MAAO,OAIbuG,OAlC0B,WAkCA,IAAnB3C,EAAmB,uDAAb,YACX,MAAO,CACL,CACE0C,KAAM1C,EAAM,eACZ5D,MAAO,WAET,CACEsG,KAAM1C,EAAM,aACZ5D,MAAO,YASbwG,mBAAoB,SAAUC,EAAWC,EAAcC,GACrD,IAAK,IAAMC,KAAKH,EAAUI,OAAQ,CAChC,IAAMxH,EAAQoH,EAAUI,OAAOD,GAC/B,GAAIvH,EAAMG,OAASkH,EAAalH,KAC9B,IAAK,IAAMsH,KAAKJ,EAAarF,OAAQ,CACnC,IAAM0F,EAAQL,EAAarF,OAAOyF,GAGlC,QAAsCvF,IAAlCoF,EAAkBI,EAAMvH,MAE1B,OAAO,KAET,GAAIH,EAAMG,OAASuH,EAAMvH,MAEF,YAAjBuH,EAAMb,OAAsB,CAC9B,GAAoB,KAAhB7G,EAAMW,OAAmC,cAAnB+G,EAAMZ,SAC9B,OAAO,EACJ,GAAoB,KAAhB9G,EAAMW,OAAmC,UAAnB+G,EAAMZ,SACnC,OAAO,EACJ,GACgB,cAAnBY,EAAMZ,UACNQ,EAAkBtH,EAAMG,MAExB,OAAOmH,EAAkBtH,EAAMG,MAAMkG,MAClC,GAAuB,SAAnBqB,EAAMZ,SAAqB,CASlC,GAAI9G,EAAMW,MAAO,CACf,GACEgH,OAAOC,cAAcC,SAAS7H,EAAMsB,OACpCtB,EAAMW,MAAMkH,SAEZ,QAAO7H,EAAMW,MAAMkH,SAASH,EAAM/G,OAElC,IAAMmH,EAAI,IAAI3C,OAAOnF,EAAMW,OACrBoH,EAAI,IAAI5C,OAAOuC,EAAM/G,OAC3B,OAA8B,IAAvBmH,EAAEE,cAAcD,GAGzB,OAAO,EAEJ,GAAuB,MAAnBL,EAAMZ,SAAkB,CACjC,GAAI9G,EAAMW,MAAO,CACf,IAAMmH,EAAIG,SAASjI,EAAMW,OACnBoH,EAAIE,SAASP,EAAM/G,OACzB,OAAOoH,EAAID,EAEX,OAAO,OAavBI,aArH0B,SAqHbC,EAAMf,GAAwB,IAAbgB,EAAa,uDAAJ,GACrC,GAAID,GAAQA,EAAKE,MAAMpG,OAAS,EAE9B,IAAK,IAAMsF,KAAKY,EAAKE,MAAO,CAC1B,IAAMC,EAAcH,EAAKE,MAAMd,GACD,KAA1Be,EAAYC,KAAKpI,MACnBiI,EAAOI,KAAK,CACVvB,KAAM,IAAMM,EAAI,KAAOe,EAAYC,KAAKE,MACxC9H,MAAO2H,EAAYC,KAAKpI,SAMlCuI,mBAnI0B,SAmIP3B,EAAYsB,GAC7B,IAAK,IAAMd,KAAKc,EAAO,CACrB,IAAMF,EAAOE,EAAMd,GACnB,GAAIY,EAAKI,KAAKpI,OAAS4G,EACrB,OAAOoB,IAIbQ,eA3I0B,SA2IXxI,EAAMqH,GACnB,IAAK,IAAMD,KAAKC,EACd,GAAIA,EAAOD,GAAGpH,OAASA,EACrB,OAAOqH,EAAOD,KAMhBqB,E,WACJ,aAAc,uBAEZxJ,KAAKyJ,uBAAyB,G,qDAGhC,SAAeC,EAAWX,GAAmB,IAAbX,EAAa,uDAAJ,GACvC,GAAIsB,EAAU/B,YAAuC,KAAzB+B,EAAU/B,WAAmB,CACvD,IAAIuB,EAAc3B,EAAoB+B,mBACpCI,EAAU/B,WACVoB,EAAKE,OAEP,QAAoBnG,IAAhBoG,EAEF,IAAK,IAAMf,KAAKe,EAAYd,OAAQ,CAClC,IAAMxH,EAAQsI,EAAYd,OAAOD,GAC7BuB,EAAU3I,MAAQH,EAAMG,MAAQH,EAAMS,QAAQwB,SAChD7C,KAAKyJ,uBAAyB7I,EAAMS,SAEtC+G,EAAOgB,KAAK,CAAEvB,KAAMjH,EAAMC,MAAOU,MAAOX,EAAMG,a","file":"appForm.umd.min.28.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row-input\",class:!_vm.validationField && _vm.mode ? 'mb-5' : ''},[_c('div',{staticClass:\"row-input__row\",class:_vm.validationField ? '' : 'mb-5'},[(_vm.validationField)?_c('transition',{attrs:{\"name\":\"fade\"}},[_c('div',{staticClass:\"choice-section min-height\"},[_c('b-row',{attrs:{\"align-v\":\"center\"}},[_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('label',{staticClass:\"label\"},[_vm._v(\" \"+_vm._s(_vm.field.label)+\" \")])]),_c('b-col',{staticClass:\"input-field\",attrs:{\"sm\":\"6\"}},[_c('ValidationProvider',{attrs:{\"rules\":_vm.field.require,\"name\":_vm.field.name},scopedSlots:_vm._u([{key:\"default\",fn:function(v){return [_c('b-form-select',{staticClass:\"input-field__input form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"\",\"options\":_vm.field.options,\"name\":_vm.field.name},model:{value:(_vm.field.value),callback:function ($$v) {_vm.$set(_vm.field, \"value\", $$v)},expression:\"field.value\"}}),_c('div',{staticClass:\"text-danger\"},_vm._l((v.errors),function(error,ii){return _c('small',{key:ii,staticClass:\"d-block\"},[_vm._v(\" \"+_vm._s(error)+\" \")])}),0)]}}],null,false,1224864743)})],1)],1)],1)]):_vm._e()],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"html\">\n  <div class=\"row-input\" :class=\"!validationField && mode ? 'mb-5' : ''\">\n    <div class=\"row-input__row\" :class=\"validationField ? '' : 'mb-5'\">\n      <transition v-if=\"validationField\" name=\"fade\">\n        <div class=\"choice-section min-height\">\n          <b-row align-v=\"center\">\n            <b-col sm=\"6\">\n              <label class=\"label\"> {{ field.label }} </label>\n            </b-col>\n            <b-col sm=\"6\" class=\"input-field\">\n              <ValidationProvider\n                v-slot=\"v\"\n                :rules=\"field.require\"\n                :name=\"field.name\"\n              >\n                <b-form-select\n                  v-model=\"field.value\"\n                  type=\"text\"\n                  placeholder=\"\"\n                  :options=\"field.options\"\n                  class=\"input-field__input form-control\"\n                  :name=\"field.name\"\n                >\n                </b-form-select>\n                <div class=\"text-danger\">\n                  <small\n                    v-for=\"(error, ii) in v.errors\"\n                    :key=\"ii\"\n                    class=\"d-block\"\n                  >\n                    {{ error }}\n                  </small>\n                </div>\n              </ValidationProvider>\n            </b-col>\n          </b-row>\n        </div>\n      </transition>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapState } from \"vuex\";\nimport { ValidationProvider } from \"vee-validate\";\nimport { validationRessource as Validation } from \"../config/validation.js\";\nimport \"../EditsFields/vee-validate-custom.js\";\n\nexport default {\n  name: \"InputText\",\n  props: {\n    field: {\n      type: Object,\n      required: true,\n    },\n  },\n  components: {\n    ValidationProvider,\n  },\n  data() {\n    return {\n      //\n    };\n  },\n  mounted() {\n    //\n  },\n  watch: {\n    //\n  },\n  computed: {\n    ...mapGetters([\"formDatas\"]),\n    ...mapState([\"formDatasValidate\", \"mode\"]),\n    validationField() {\n      var status = true;\n      if (this.field.states.length) {\n        status = Validation.computedValidation(\n          this.formDatas,\n          this.field,\n          this.formDatasValidate\n        );\n        if (status === undefined) status = false;\n        this.setStatus(status);\n        return status;\n      } else {\n        this.setStatus(status);\n        return status;\n      }\n    },\n  },\n  methods: {\n    setStatus(status) {\n      this.$set(this.field, \"status\", status);\n    },\n    //\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n\n<!--\n //nom du fichier en pascal.\n //<template>\n - le nom des attributs en kebab-case;\n - la valeur des attributs et des variables en camelCase;\n - function en PascalCase\n //props, data\n - variable en camelCase\n //methods\n - variable en PascalCase\n-->\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SelectDisplay.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SelectDisplay.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SelectDisplay.vue?vue&type=template&id=5878c1c1&scoped=true&lang=html&\"\nimport script from \"./SelectDisplay.vue?vue&type=script&lang=js&\"\nexport * from \"./SelectDisplay.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5878c1c1\",\n  null\n  \n)\n\nexport default component.exports","/**\n  * vee-validate v3.4.13\n  * (c) 2021 Abdelrahman Awad\n  * @license MIT\n  */\n/**\r\n * Some Alpha Regex helpers.\r\n * https://github.com/chriso/validator.js/blob/master/src/lib/alpha.js\r\n */\r\n/* eslint-disable no-misleading-character-class */\r\nvar alpha$1 = {\r\n    en: /^[A-Z]*$/i,\r\n    cs: /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]*$/i,\r\n    da: /^[A-ZÆØÅ]*$/i,\r\n    de: /^[A-ZÄÖÜß]*$/i,\r\n    es: /^[A-ZÁÉÍÑÓÚÜ]*$/i,\r\n    fa: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰپژگچکی]*$/,\r\n    fr: /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]*$/i,\r\n    it: /^[A-Z\\xC0-\\xFF]*$/i,\r\n    lt: /^[A-ZĄČĘĖĮŠŲŪŽ]*$/i,\r\n    nl: /^[A-ZÉËÏÓÖÜ]*$/i,\r\n    hu: /^[A-ZÁÉÍÓÖŐÚÜŰ]*$/i,\r\n    pl: /^[A-ZĄĆĘŚŁŃÓŻŹ]*$/i,\r\n    pt: /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]*$/i,\r\n    ro: /^[A-ZĂÂÎŞŢ]*$/i,\r\n    ru: /^[А-ЯЁ]*$/i,\r\n    sk: /^[A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ]*$/i,\r\n    sr: /^[A-ZČĆŽŠĐ]*$/i,\r\n    sv: /^[A-ZÅÄÖ]*$/i,\r\n    tr: /^[A-ZÇĞİıÖŞÜ]*$/i,\r\n    uk: /^[А-ЩЬЮЯЄІЇҐ]*$/i,\r\n    ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]*$/,\r\n    az: /^[A-ZÇƏĞİıÖŞÜ]*$/i,\r\n    el: /^[Α-ώ]*$/i,\r\n    ja: /^[A-Z\\u3000-\\u303F\\u3040-\\u309F\\u30A0-\\u30FF\\uFF00-\\uFFEF\\u4E00-\\u9FAF]*$/i,\r\n    he: /^[A-Z\\u05D0-\\u05EA']*$/i\r\n};\r\nvar alphaSpaces = {\r\n    en: /^[A-Z\\s]*$/i,\r\n    cs: /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ\\s]*$/i,\r\n    da: /^[A-ZÆØÅ\\s]*$/i,\r\n    de: /^[A-ZÄÖÜß\\s]*$/i,\r\n    es: /^[A-ZÁÉÍÑÓÚÜ\\s]*$/i,\r\n    fa: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰپژگچکی]*$/,\r\n    fr: /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ\\s]*$/i,\r\n    it: /^[A-Z\\xC0-\\xFF\\s]*$/i,\r\n    lt: /^[A-ZĄČĘĖĮŠŲŪŽ\\s]*$/i,\r\n    nl: /^[A-ZÉËÏÓÖÜ\\s]*$/i,\r\n    hu: /^[A-ZÁÉÍÓÖŐÚÜŰ\\s]*$/i,\r\n    pl: /^[A-ZĄĆĘŚŁŃÓŻŹ\\s]*$/i,\r\n    pt: /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ\\s]*$/i,\r\n    ro: /^[A-ZĂÂÎŞŢ\\s]*$/i,\r\n    ru: /^[А-ЯЁ\\s]*$/i,\r\n    sk: /^[A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ\\s]*$/i,\r\n    sr: /^[A-ZČĆŽŠĐ\\s]*$/i,\r\n    sv: /^[A-ZÅÄÖ\\s]*$/i,\r\n    tr: /^[A-ZÇĞİıÖŞÜ\\s]*$/i,\r\n    uk: /^[А-ЩЬЮЯЄІЇҐ\\s]*$/i,\r\n    ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ\\s]*$/,\r\n    az: /^[A-ZÇƏĞİıÖŞÜ\\s]*$/i,\r\n    el: /^[Α-ώ\\s]*$/i,\r\n    ja: /^[A-Z\\u3000-\\u303F\\u3040-\\u309F\\u30A0-\\u30FF\\uFF00-\\uFFEF\\u4E00-\\u9FAF\\s]*$/i,\r\n    he: /^[A-Z\\u05D0-\\u05EA'\\s]*$/i\r\n};\r\nvar alphanumeric = {\r\n    en: /^[0-9A-Z]*$/i,\r\n    cs: /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]*$/i,\r\n    da: /^[0-9A-ZÆØÅ]$/i,\r\n    de: /^[0-9A-ZÄÖÜß]*$/i,\r\n    es: /^[0-9A-ZÁÉÍÑÓÚÜ]*$/i,\r\n    fa: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰپژگچکی]*$/,\r\n    fr: /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]*$/i,\r\n    it: /^[0-9A-Z\\xC0-\\xFF]*$/i,\r\n    lt: /^[0-9A-ZĄČĘĖĮŠŲŪŽ]*$/i,\r\n    hu: /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]*$/i,\r\n    nl: /^[0-9A-ZÉËÏÓÖÜ]*$/i,\r\n    pl: /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]*$/i,\r\n    pt: /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]*$/i,\r\n    ro: /^[0-9A-ZĂÂÎŞŢ]*$/i,\r\n    ru: /^[0-9А-ЯЁ]*$/i,\r\n    sk: /^[0-9A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ]*$/i,\r\n    sr: /^[0-9A-ZČĆŽŠĐ]*$/i,\r\n    sv: /^[0-9A-ZÅÄÖ]*$/i,\r\n    tr: /^[0-9A-ZÇĞİıÖŞÜ]*$/i,\r\n    uk: /^[0-9А-ЩЬЮЯЄІЇҐ]*$/i,\r\n    ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]*$/,\r\n    az: /^[0-9A-ZÇƏĞİıÖŞÜ]*$/i,\r\n    el: /^[0-9Α-ώ]*$/i,\r\n    ja: /^[0-9A-Z\\u3000-\\u303F\\u3040-\\u309F\\u30A0-\\u30FF\\uFF00-\\uFFEF\\u4E00-\\u9FAF]*$/i,\r\n    he: /^[0-9A-Z\\u05D0-\\u05EA']*$/i\r\n};\r\nvar alphaDash = {\r\n    en: /^[0-9A-Z_-]*$/i,\r\n    cs: /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ_-]*$/i,\r\n    da: /^[0-9A-ZÆØÅ_-]*$/i,\r\n    de: /^[0-9A-ZÄÖÜß_-]*$/i,\r\n    es: /^[0-9A-ZÁÉÍÑÓÚÜ_-]*$/i,\r\n    fa: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰپژگچکی]*$/,\r\n    fr: /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ_-]*$/i,\r\n    it: /^[0-9A-Z\\xC0-\\xFF_-]*$/i,\r\n    lt: /^[0-9A-ZĄČĘĖĮŠŲŪŽ_-]*$/i,\r\n    nl: /^[0-9A-ZÉËÏÓÖÜ_-]*$/i,\r\n    hu: /^[0-9A-ZÁÉÍÓÖŐÚÜŰ_-]*$/i,\r\n    pl: /^[0-9A-ZĄĆĘŚŁŃÓŻŹ_-]*$/i,\r\n    pt: /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ_-]*$/i,\r\n    ro: /^[0-9A-ZĂÂÎŞŢ_-]*$/i,\r\n    ru: /^[0-9А-ЯЁ_-]*$/i,\r\n    sk: /^[0-9A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ_-]*$/i,\r\n    sr: /^[0-9A-ZČĆŽŠĐ_-]*$/i,\r\n    sv: /^[0-9A-ZÅÄÖ_-]*$/i,\r\n    tr: /^[0-9A-ZÇĞİıÖŞÜ_-]*$/i,\r\n    uk: /^[0-9А-ЩЬЮЯЄІЇҐ_-]*$/i,\r\n    ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ_-]*$/,\r\n    az: /^[0-9A-ZÇƏĞİıÖŞÜ_-]*$/i,\r\n    el: /^[0-9Α-ώ_-]*$/i,\r\n    ja: /^[0-9A-Z\\u3000-\\u303F\\u3040-\\u309F\\u30A0-\\u30FF\\uFF00-\\uFFEF\\u4E00-\\u9FAF_-]*$/i,\r\n    he: /^[0-9A-Z\\u05D0-\\u05EA'_-]*$/i\r\n};\n\nvar validate$r = function (value, _a) {\r\n    var _b = (_a === void 0 ? {} : _a).locale, locale = _b === void 0 ? '' : _b;\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return validate$r(val, { locale: locale }); });\r\n    }\r\n    // Match at least one locale.\r\n    if (!locale) {\r\n        return Object.keys(alpha$1).some(function (loc) { return alpha$1[loc].test(value); });\r\n    }\r\n    return (alpha$1[locale] || alpha$1.en).test(value);\r\n};\r\nvar params$k = [\r\n    {\r\n        name: 'locale'\r\n    }\r\n];\r\nvar alpha = {\r\n    validate: validate$r,\r\n    params: params$k\r\n};\n\nvar validate$q = function (value, _a) {\r\n    var _b = (_a === void 0 ? {} : _a).locale, locale = _b === void 0 ? '' : _b;\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return validate$q(val, { locale: locale }); });\r\n    }\r\n    // Match at least one locale.\r\n    if (!locale) {\r\n        return Object.keys(alphaDash).some(function (loc) { return alphaDash[loc].test(value); });\r\n    }\r\n    return (alphaDash[locale] || alphaDash.en).test(value);\r\n};\r\nvar params$j = [\r\n    {\r\n        name: 'locale'\r\n    }\r\n];\r\nvar alpha_dash = {\r\n    validate: validate$q,\r\n    params: params$j\r\n};\n\nvar validate$p = function (value, _a) {\r\n    var _b = (_a === void 0 ? {} : _a).locale, locale = _b === void 0 ? '' : _b;\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return validate$p(val, { locale: locale }); });\r\n    }\r\n    // Match at least one locale.\r\n    if (!locale) {\r\n        return Object.keys(alphanumeric).some(function (loc) { return alphanumeric[loc].test(value); });\r\n    }\r\n    return (alphanumeric[locale] || alphanumeric.en).test(value);\r\n};\r\nvar params$i = [\r\n    {\r\n        name: 'locale'\r\n    }\r\n];\r\nvar alpha_num = {\r\n    validate: validate$p,\r\n    params: params$i\r\n};\n\nvar validate$o = function (value, _a) {\r\n    var _b = (_a === void 0 ? {} : _a).locale, locale = _b === void 0 ? '' : _b;\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return validate$o(val, { locale: locale }); });\r\n    }\r\n    // Match at least one locale.\r\n    if (!locale) {\r\n        return Object.keys(alphaSpaces).some(function (loc) { return alphaSpaces[loc].test(value); });\r\n    }\r\n    return (alphaSpaces[locale] || alphaSpaces.en).test(value);\r\n};\r\nvar params$h = [\r\n    {\r\n        name: 'locale'\r\n    }\r\n];\r\nvar alpha_spaces = {\r\n    validate: validate$o,\r\n    params: params$h\r\n};\n\nvar validate$n = function (value, _a) {\r\n    var _b = _a === void 0 ? {} : _a, min = _b.min, max = _b.max;\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return !!validate$n(val, { min: min, max: max }); });\r\n    }\r\n    return Number(min) <= value && Number(max) >= value;\r\n};\r\nvar params$g = [\r\n    {\r\n        name: 'min'\r\n    },\r\n    {\r\n        name: 'max'\r\n    }\r\n];\r\nvar between = {\r\n    validate: validate$n,\r\n    params: params$g\r\n};\n\nvar validate$m = function (value, _a) {\r\n    var target = _a.target;\r\n    return String(value) === String(target);\r\n};\r\nvar params$f = [\r\n    {\r\n        name: 'target',\r\n        isTarget: true\r\n    }\r\n];\r\nvar confirmed = {\r\n    validate: validate$m,\r\n    params: params$f\r\n};\n\nvar validate$l = function (value, _a) {\r\n    var length = _a.length;\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return validate$l(val, { length: length }); });\r\n    }\r\n    var strVal = String(value);\r\n    return /^[0-9]*$/.test(strVal) && strVal.length === length;\r\n};\r\nvar params$e = [\r\n    {\r\n        name: 'length',\r\n        cast: function (value) {\r\n            return Number(value);\r\n        }\r\n    }\r\n];\r\nvar digits = {\r\n    validate: validate$l,\r\n    params: params$e\r\n};\n\nvar validateImage = function (file, width, height) {\r\n    var URL = window.URL || window.webkitURL;\r\n    return new Promise(function (resolve) {\r\n        var image = new Image();\r\n        image.onerror = function () { return resolve(false); };\r\n        image.onload = function () { return resolve(image.width === width && image.height === height); };\r\n        image.src = URL.createObjectURL(file);\r\n    });\r\n};\r\nvar validate$k = function (files, _a) {\r\n    var width = _a.width, height = _a.height;\r\n    var list = [];\r\n    files = Array.isArray(files) ? files : [files];\r\n    for (var i = 0; i < files.length; i++) {\r\n        // if file is not an image, reject.\r\n        if (!/\\.(jpg|svg|jpeg|png|bmp|gif)$/i.test(files[i].name)) {\r\n            return Promise.resolve(false);\r\n        }\r\n        list.push(files[i]);\r\n    }\r\n    return Promise.all(list.map(function (file) { return validateImage(file, width, height); })).then(function (values) {\r\n        return values.every(function (v) { return v; });\r\n    });\r\n};\r\nvar params$d = [\r\n    {\r\n        name: 'width',\r\n        cast: function (value) {\r\n            return Number(value);\r\n        }\r\n    },\r\n    {\r\n        name: 'height',\r\n        cast: function (value) {\r\n            return Number(value);\r\n        }\r\n    }\r\n];\r\nvar dimensions = {\r\n    validate: validate$k,\r\n    params: params$d\r\n};\n\nvar validate$j = function (value, _a) {\r\n    var multiple = (_a === void 0 ? {} : _a).multiple;\r\n    // eslint-disable-next-line\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (multiple && !Array.isArray(value)) {\r\n        value = String(value)\r\n            .split(',')\r\n            .map(function (emailStr) { return emailStr.trim(); });\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return re.test(String(val)); });\r\n    }\r\n    return re.test(String(value));\r\n};\r\nvar params$c = [\r\n    {\r\n        name: 'multiple',\r\n        default: false\r\n    }\r\n];\r\nvar email = {\r\n    validate: validate$j,\r\n    params: params$c\r\n};\n\nfunction isNullOrUndefined(value) {\r\n    return value === null || value === undefined;\r\n}\r\nfunction isEmptyArray(arr) {\r\n    return Array.isArray(arr) && arr.length === 0;\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction isCallable(fn) {\r\n    return typeof fn === 'function';\r\n}\n\nfunction includes(collection, item) {\r\n    return collection.indexOf(item) !== -1;\r\n}\r\n/**\r\n * Converts an array-like object to array, provides a simple polyfill for Array.from\r\n */\r\nfunction toArray(arrayLike) {\r\n    if (isCallable(Array.from)) {\r\n        return Array.from(arrayLike);\r\n    }\r\n    /* istanbul ignore next */\r\n    return _copyArray(arrayLike);\r\n}\r\n/* istanbul ignore next */\r\nfunction _copyArray(arrayLike) {\r\n    var array = [];\r\n    var length = arrayLike.length;\r\n    for (var i = 0; i < length; i++) {\r\n        array.push(arrayLike[i]);\r\n    }\r\n    return array;\r\n}\n\nvar validate$i = function (value, options) {\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return validate$i(val, options); });\r\n    }\r\n    return toArray(options).some(function (item) {\r\n        // eslint-disable-next-line\r\n        return item == value;\r\n    });\r\n};\r\nvar oneOf = {\r\n    validate: validate$i\r\n};\n\nvar validate$h = function (value, args) {\r\n    return !validate$i(value, args);\r\n};\r\nvar excluded = {\r\n    validate: validate$h\r\n};\n\nvar validate$g = function (files, extensions) {\r\n    var regex = new RegExp(\".(\" + extensions.join('|') + \")$\", 'i');\r\n    if (Array.isArray(files)) {\r\n        return files.every(function (file) { return regex.test(file.name); });\r\n    }\r\n    return regex.test(files.name);\r\n};\r\nvar ext = {\r\n    validate: validate$g\r\n};\n\nvar validate$f = function (files) {\r\n    var regex = /\\.(jpg|svg|jpeg|png|bmp|gif|webp)$/i;\r\n    if (Array.isArray(files)) {\r\n        return files.every(function (file) { return regex.test(file.name); });\r\n    }\r\n    return regex.test(files.name);\r\n};\r\nvar image = {\r\n    validate: validate$f\r\n};\n\nvar validate$e = function (value) {\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return /^-?[0-9]+$/.test(String(val)); });\r\n    }\r\n    return /^-?[0-9]+$/.test(String(value));\r\n};\r\nvar integer = {\r\n    validate: validate$e\r\n};\n\nvar validate$d = function (value, _a) {\r\n    var other = _a.other;\r\n    return value === other;\r\n};\r\nvar params$b = [\r\n    {\r\n        name: 'other'\r\n    }\r\n];\r\nvar is = {\r\n    validate: validate$d,\r\n    params: params$b\r\n};\n\nvar validate$c = function (value, _a) {\r\n    var other = _a.other;\r\n    return value !== other;\r\n};\r\nvar params$a = [\r\n    {\r\n        name: 'other'\r\n    }\r\n];\r\nvar is_not = {\r\n    validate: validate$c,\r\n    params: params$a\r\n};\n\nvar validate$b = function (value, _a) {\r\n    var length = _a.length;\r\n    if (isNullOrUndefined(value)) {\r\n        return false;\r\n    }\r\n    if (typeof value === 'string') {\r\n        value = toArray(value);\r\n    }\r\n    if (typeof value === 'number') {\r\n        value = String(value);\r\n    }\r\n    if (!value.length) {\r\n        value = toArray(value);\r\n    }\r\n    return value.length === length;\r\n};\r\nvar params$9 = [\r\n    {\r\n        name: 'length',\r\n        cast: function (value) { return Number(value); }\r\n    }\r\n];\r\nvar length = {\r\n    validate: validate$b,\r\n    params: params$9\r\n};\n\nvar validate$a = function (value, _a) {\r\n    var length = _a.length;\r\n    if (isNullOrUndefined(value)) {\r\n        return length >= 0;\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return validate$a(val, { length: length }); });\r\n    }\r\n    return String(value).length <= length;\r\n};\r\nvar params$8 = [\r\n    {\r\n        name: 'length',\r\n        cast: function (value) {\r\n            return Number(value);\r\n        }\r\n    }\r\n];\r\nvar max = {\r\n    validate: validate$a,\r\n    params: params$8\r\n};\n\nvar validate$9 = function (value, _a) {\r\n    var max = _a.max;\r\n    if (isNullOrUndefined(value) || value === '') {\r\n        return false;\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return value.length > 0 && value.every(function (val) { return validate$9(val, { max: max }); });\r\n    }\r\n    return Number(value) <= max;\r\n};\r\nvar params$7 = [\r\n    {\r\n        name: 'max',\r\n        cast: function (value) {\r\n            return Number(value);\r\n        }\r\n    }\r\n];\r\nvar max_value = {\r\n    validate: validate$9,\r\n    params: params$7\r\n};\n\nvar validate$8 = function (files, mimes) {\r\n    var regex = new RegExp(mimes.join('|').replace('*', '.+') + \"$\", 'i');\r\n    if (Array.isArray(files)) {\r\n        return files.every(function (file) { return regex.test(file.type); });\r\n    }\r\n    return regex.test(files.type);\r\n};\r\nvar mimes = {\r\n    validate: validate$8\r\n};\n\nvar validate$7 = function (value, _a) {\r\n    var length = _a.length;\r\n    if (isNullOrUndefined(value)) {\r\n        return false;\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return validate$7(val, { length: length }); });\r\n    }\r\n    return String(value).length >= length;\r\n};\r\nvar params$6 = [\r\n    {\r\n        name: 'length',\r\n        cast: function (value) {\r\n            return Number(value);\r\n        }\r\n    }\r\n];\r\nvar min = {\r\n    validate: validate$7,\r\n    params: params$6\r\n};\n\nvar validate$6 = function (value, _a) {\r\n    var min = _a.min;\r\n    if (isNullOrUndefined(value) || value === '') {\r\n        return false;\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return value.length > 0 && value.every(function (val) { return validate$6(val, { min: min }); });\r\n    }\r\n    return Number(value) >= min;\r\n};\r\nvar params$5 = [\r\n    {\r\n        name: 'min',\r\n        cast: function (value) {\r\n            return Number(value);\r\n        }\r\n    }\r\n];\r\nvar min_value = {\r\n    validate: validate$6,\r\n    params: params$5\r\n};\n\nvar ar = /^[٠١٢٣٤٥٦٧٨٩]+$/;\r\nvar en = /^[0-9]+$/;\r\nvar validate$5 = function (value) {\r\n    var testValue = function (val) {\r\n        var strValue = String(val);\r\n        return en.test(strValue) || ar.test(strValue);\r\n    };\r\n    if (Array.isArray(value)) {\r\n        return value.every(testValue);\r\n    }\r\n    return testValue(value);\r\n};\r\nvar numeric = {\r\n    validate: validate$5\r\n};\n\nvar validate$4 = function (value, _a) {\r\n    var regex = _a.regex;\r\n    if (Array.isArray(value)) {\r\n        return value.every(function (val) { return validate$4(val, { regex: regex }); });\r\n    }\r\n    return regex.test(String(value));\r\n};\r\nvar params$4 = [\r\n    {\r\n        name: 'regex',\r\n        cast: function (value) {\r\n            if (typeof value === 'string') {\r\n                return new RegExp(value);\r\n            }\r\n            return value;\r\n        }\r\n    }\r\n];\r\nvar regex = {\r\n    validate: validate$4,\r\n    params: params$4\r\n};\n\nvar validate$3 = function (value, _a) {\r\n    var allowFalse = (_a === void 0 ? { allowFalse: true } : _a).allowFalse;\r\n    var result = {\r\n        valid: false,\r\n        required: true\r\n    };\r\n    if (isNullOrUndefined(value) || isEmptyArray(value)) {\r\n        return result;\r\n    }\r\n    // incase a field considers `false` as an empty value like checkboxes.\r\n    if (value === false && !allowFalse) {\r\n        return result;\r\n    }\r\n    result.valid = !!String(value).trim().length;\r\n    return result;\r\n};\r\nvar computesRequired$1 = true;\r\nvar params$3 = [\r\n    {\r\n        name: 'allowFalse',\r\n        default: true\r\n    }\r\n];\r\nvar required = {\r\n    validate: validate$3,\r\n    params: params$3,\r\n    computesRequired: computesRequired$1\r\n};\n\nvar testEmpty = function (value) {\r\n    return isEmptyArray(value) || includes([false, null, undefined], value) || !String(value).trim().length;\r\n};\r\nvar validate$2 = function (value, _a) {\r\n    var target = _a.target, values = _a.values;\r\n    var required;\r\n    if (values && values.length) {\r\n        if (!Array.isArray(values) && typeof values === 'string') {\r\n            values = [values];\r\n        }\r\n        // eslint-disable-next-line\r\n        required = values.some(function (val) { return val == String(target).trim(); });\r\n    }\r\n    else {\r\n        required = !testEmpty(target);\r\n    }\r\n    if (!required) {\r\n        return {\r\n            valid: true,\r\n            required: required\r\n        };\r\n    }\r\n    return {\r\n        valid: !testEmpty(value),\r\n        required: required\r\n    };\r\n};\r\nvar params$2 = [\r\n    {\r\n        name: 'target',\r\n        isTarget: true\r\n    },\r\n    {\r\n        name: 'values'\r\n    }\r\n];\r\nvar computesRequired = true;\r\nvar required_if = {\r\n    validate: validate$2,\r\n    params: params$2,\r\n    computesRequired: computesRequired\r\n};\n\nvar validate$1 = function (files, _a) {\r\n    var size = _a.size;\r\n    if (isNaN(size)) {\r\n        return false;\r\n    }\r\n    var nSize = size * 1024;\r\n    if (!Array.isArray(files)) {\r\n        return files.size <= nSize;\r\n    }\r\n    for (var i = 0; i < files.length; i++) {\r\n        if (files[i].size > nSize) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\nvar params$1 = [\r\n    {\r\n        name: 'size',\r\n        cast: function (value) {\r\n            return Number(value);\r\n        }\r\n    }\r\n];\r\nvar size = {\r\n    validate: validate$1,\r\n    params: params$1\r\n};\n\nvar validate = function (value, params) {\r\n    var _a = params || {}, _b = _a.decimals, decimals = _b === void 0 ? 0 : _b, _c = _a.separator, separator = _c === void 0 ? 'dot' : _c;\r\n    var delimiterRegexPart = separator === 'comma' ? ',?' : '\\\\.?';\r\n    var decimalRegexPart = decimals === 0 ? '\\\\d*' : \"(\\\\d{\" + decimals + \"})?\";\r\n    var regex = new RegExp(\"^-?\\\\d+\" + delimiterRegexPart + decimalRegexPart + \"$\");\r\n    return Array.isArray(value) ? value.every(function (val) { return regex.test(String(val)); }) : regex.test(String(value));\r\n};\r\nvar params = [\r\n    {\r\n        name: 'decimals',\r\n        default: 0\r\n    },\r\n    {\r\n        name: 'separator',\r\n        default: 'dot'\r\n    }\r\n];\r\nvar double = {\r\n    validate: validate,\r\n    params: params\r\n};\n\nexport { alpha, alpha_dash, alpha_num, alpha_spaces, between, confirmed, digits, dimensions, double, email, excluded, ext, image, integer, is, is_not, length, max, max_value, mimes, min, min_value, numeric, oneOf, regex, required, required_if, size };\n","import { extend } from \"vee-validate\";\nimport { required, email, alpha, numeric } from \"vee-validate/dist/rules\";\n// No message specified.\nextend(\"email\", email);\n// Override the default message.\nextend(\"required\", {\n  ...required,\n  message: \"Ce champs est requis\",\n});\nextend(\"alpha\", alpha);\nextend(\"alpha\", numeric);\n//export default extend;\n","import config from \"./config.js\";\nconst validationRessource = {\n  conditions() {\n    return {\n      action: \"\",\n      name: \"\",\n      operator: \"\",\n      value: \"\",\n      state_name: \"\",\n    };\n  },\n  listsOperators() {\n    return [\n      {\n        text: \"Validé\",\n        value: \"validated\",\n      },\n      {\n        text: \"non vide\",\n        value: \"not_empty\",\n      },\n      {\n        text: \" vide\",\n        value: \"empty\",\n      },\n      {\n        text: \"la valeur du champs est egal à\",\n        value: \"egal\",\n      },\n      {\n        text: \"la valeur du champs est superieur à\",\n        value: \">\",\n      },\n    ];\n  },\n  Action(val = \"Ce champs\") {\n    return [\n      {\n        text: val + \" est visible\",\n        value: \"visible\",\n      },\n      {\n        text: val + \" est caché\",\n        value: \"hidden\",\n      },\n    ];\n  },\n  /**\n   * Validation des champs.\n   * Retourne false, pour desactiver.\n   * NB: formDatasValidate prend plus de temps pour ce mettre à jour.\n   */\n  computedValidation: function (formDatas, currentField, formDatasValidate) {\n    for (const i in formDatas.fields) {\n      const field = formDatas.fields[i];\n      if (field.name !== currentField.name) {\n        for (const j in currentField.states) {\n          const state = currentField.states[j];\n\n          // si le champs n'est pas definit on retourne false;\n          if (formDatasValidate[state.name] === undefined) {\n            //console.log(\"Validation non forunit : \", formDatasValidate);\n            return null;\n          }\n          if (field.name === state.name) {\n            // visible\n            if (state.action === \"visible\") {\n              if (field.value === \"\" && state.operator === \"not_empty\")\n                return false;\n              else if (field.value !== \"\" && state.operator === \"empty\")\n                return false;\n              else if (\n                state.operator === \"validated\" &&\n                formDatasValidate[field.name]\n              )\n                return formDatasValidate[field.name].valid;\n              else if (state.operator === \"egal\") {\n                /*\n                console.log(\n                  \"Valeur requise : \",\n                  state.value,\n                  \" :: Valeur du parent\",\n                  field.value\n                );\n                /**/\n                if (field.value) {\n                  if (\n                    config.typeSelection.includes(field.type) &&\n                    field.value.includes\n                  ) {\n                    return field.value.includes(state.value) ? true : false;\n                  } else {\n                    const x = new String(field.value);\n                    const y = new String(state.value);\n                    return x.localeCompare(y) === 0 ? true : false;\n                  }\n                } else {\n                  return false;\n                }\n              } else if (state.operator === \">\") {\n                if (field.value) {\n                  const x = parseInt(field.value);\n                  const y = parseInt(state.value);\n                  return y < x ? true : false;\n                } else {\n                  return false;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * Retourne la liste des etapes.\n   */\n  listesEtapes(form, formDatas, etapes = []) {\n    if (form && form.forms.length > 1) {\n      //console.log(\"listesEtapes \");\n      for (const i in form.forms) {\n        const currentForm = form.forms[i];\n        if (currentForm.info.name !== \"\") {\n          etapes.push({\n            text: \"(\" + i + \") \" + currentForm.info.title,\n            value: currentForm.info.name,\n          });\n        }\n      }\n    }\n  },\n  getFormStateByName(state_name, forms) {\n    for (const i in forms) {\n      const form = forms[i];\n      if (form.info.name === state_name) {\n        return form;\n      }\n    }\n  },\n  getFieldByName(name, fields) {\n    for (const i in fields) {\n      if (fields[i].name === name) {\n        return fields[i];\n      }\n    }\n  },\n};\n\nclass ValidationInstance {\n  constructor() {\n    //\n    this.StepeValidationOptions = [];\n  }\n  //Retourne les etapes sous forme de listes.\n  listeDesChamps(condition, form, fields = []) {\n    if (condition.state_name && condition.state_name !== \"\") {\n      var currentForm = validationRessource.getFormStateByName(\n        condition.state_name,\n        form.forms\n      );\n      if (currentForm !== undefined) {\n        //console.log(\"listeDesChamps \", currentForm);\n        for (const i in currentForm.fields) {\n          const field = currentForm.fields[i];\n          if (condition.name == field.name && field.options.length) {\n            this.StepeValidationOptions = field.options;\n          }\n          fields.push({ text: field.label, value: field.name });\n        }\n      }\n    }\n  }\n}\n/**/\n\nexport { validationRessource, ValidationInstance };\n"],"sourceRoot":""}